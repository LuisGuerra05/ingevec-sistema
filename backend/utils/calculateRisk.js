const Incumplimiento = require('../models/Incumplimiento');
const Empresa = require('../models/Empresa');

// Pesos provisionales (1‚Äì12)
const pesosRazon = {
  "Abandono de obra": 1,
  "Abandono e intervenci√≥n de obra": 2,
  "Atraso y da√±os por trabajos extempor√°neos": 3,
  "Da√±os por filtraciones": 4,
  "Intervenci√≥n del contrato": 5,
  "Juicio laboral": 6,
  "Mal funcionamiento": 7,
  "Mal funcionamiento intervenci√≥n": 8,
  "Mal funcionamiento de plazos": 9,
  "Plazo extendido contrato": 10,
  "Quiebra subcontrato": 11,
  "Otros": 12,
};

// --- FUNCI√ìN PRINCIPAL ---
async function calcularColorEmpresa(nombreEmpresa) {
  try {
    // 1Ô∏è‚É£ Buscar los incumplimientos de la empresa
    const registros = await Incumplimiento.find({
      empresa: { $regex: new RegExp(`^${nombreEmpresa}$`, "i") },
      incumplimiento: true,
    });

    // 2Ô∏è‚É£ Si no tiene registros de incumplimiento ‚Üí sin color (null)
    if (!registros.length) {
      await Empresa.findOneAndUpdate(
        { nombre: { $regex: new RegExp(`^${nombreEmpresa}$`, "i") } },
        { semaforo: null, riesgo: null },
        { new: true }
      );
      return;
    }

    // 3Ô∏è‚É£ Calcular puntaje ponderado
    const puntajes = registros.map((reg) => {
      const W = pesosRazon[reg.razon] || 1;
      const G = reg.gravedad || 1;
      return W * G;
    });

    // 4Ô∏è‚É£ Normalizar y promediar
    const Pmax = 12 * 5; // raz√≥n m√°s alta (12) * gravedad m√°xima (5)
    const normalizados = puntajes.map((p) => (p / Pmax) * 100);
    const promedio = normalizados.reduce((a, b) => a + b, 0) / normalizados.length;

    // 5Ô∏è‚É£ Determinar color
    let color = null;
    if (promedio >= 61) color = "rojo";
    else if (promedio >= 31) color = "amarillo";
    else if (promedio >= 0) color = "verde";

    // 6Ô∏è‚É£ Actualizar la empresa con color y valor de riesgo
    await Empresa.findOneAndUpdate(
      { nombre: { $regex: new RegExp(`^${nombreEmpresa}$`, "i") } },
      { semaforo: color, riesgo: promedio.toFixed(2) }, // üîπ guardamos valor num√©rico redondeado
      { new: true }
    );
  } catch (err) {
    console.error("Error al calcular color de empresa:", err);
  }
}

module.exports = { calcularColorEmpresa, pesosRazon };
